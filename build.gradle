buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
  id "com.github.spotbugs" version "1.6.9"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'groovy'
apply plugin: 'checkstyle'
apply plugin: 'eclipse'

group = 'CO2015-Group-17'
version = 'INITIAL-PROJECT'
sourceCompatibility = '1.11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	compile "org.codehaus.groovy:groovy-all:2.5.5"
	testCompile "org.spockframework:spock-core:1.2-groovy-2.5"
	implementation 'com.puppycrawl.tools:checkstyle:8.16'

	compile("org.springframework.boot:spring-boot-starter-web")
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
}

jacoco {
    toolVersion = "0.8.2"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

// checkstyle {
//     configFile file("config/checkstyle/checkstyle.xml")
// }

// checkstyleMain {
//     source ='src/main/java'
// }

checkstyleTest {
    source ='src/test/java'
}

bootJar {
    baseName = 'gs-accessing-data-mysql'
    version = '0.1.0'
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
      xml.enabled = false
      html.enabled = true
	}
}